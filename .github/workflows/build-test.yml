# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test

on:
    push:

permissions:
    actions: read
    contents: read
    security-events: write

jobs:
    build:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: postgres
                ports:
                    - 5432:5432

            mysql:
                image: mysql
                env:
                    MYSQL_ROOT_PASSWORD: mysql
                ports:
                    - 3306:3306

            mssql:
                image: mcr.microsoft.com/mssql/server:2022-latest
                env:
                    ACCEPT_EULA: Y
                    MSSQL_SA_PASSWORD: mssql
                ports:
                    - 1433:1433

        steps:
            - uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 9.0.x

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true -c Release

            - name: Test
              env:
                  SBS_TEST_SERVER_POSTGRES: Server=localhost;Port=5432;User ID=postgres;Password=postgres;
                  SBS_TEST_SERVER_MYSQL: Server=localhost;Port=3306;Uid=root;Password=mysql;
              run: dotnet test --no-build --verbosity normal -c Release

            - name: Install R# Global Tools
              run: dotnet tool install -g JetBrains.ReSharper.GlobalTools

            - name: Run R# Code Inspection
              run: jb inspectcode ./SleepingBear.TemporaryDatabase.sln -o=result.sarif
